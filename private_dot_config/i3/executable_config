# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#

# i3 config file (v4)
#
# Please see https://i3wm.org/docs/userguide.html for a complete reference!

# TODO: 
# Status bar config
# Add brightness popup
# Add brightness and volume level in status bar

set $mod Mod4
set $alt Mod1

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango:monospace 8

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
#font pango:DejaVu Sans Mono 8

# Start XDG autostart .desktop files using dex. See also
# https://wiki.archlinux.org/index.php/XDG_Autostart
exec --no-startup-id dex --autostart --environment i3

# The combination of xss-lock, nm-applet and pactl is a popular choice, so
# they are included here as an example. Modify as you see fit.

# xss-lock grabs a logind suspend inhibit lock and will use i3lock to lock the
# screen before suspend. Use loginctl lock-session to lock your screen.
exec --no-startup-id xss-lock --transfer-sleep-lock -- i3lock --nofork

# NetworkManager is the most popular way to manage wireless networks on Linux,
# and nm-applet is a desktop environment-independent system tray GUI for it.
exec --no-startup-id nm-applet

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
bindsym $mod+Return exec i3-sensible-terminal

# kill focused window
bindsym $mod+q kill

# start dmenu (a program launcher)
bindsym $mod+f exec --no-startup-id dmenu_run
# A more modern dmenu replacement is rofi:
# bindcode $mod+40 exec "rofi -modi drun,run -show drun"
# There also is i3-dmenu-desktop which only displays applications shipping a
# .desktop file. It is a wrapper around dmenu, so you need that installed.
bindsym $mod+d exec --no-startup-id i3-dmenu-desktop
bindsym $mod+Shift+d exec --no-startup-id dmenu_path | i3-dmenu-desktop "$@" | xargs prime-run

# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+s split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+asciitilde fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+shift+q layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
bindsym $mod+b focus child

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"


# cycle through workspace
bindsym $mod+Tab workspace back_and_forth
bindsym $mod+Shift+Tab workspace next 
bindsym $mod+$alt+k workspace next 
bindsym $mod+$alt+j workspace prev 

# switch to workspace
bindsym $mod+1 workspace number $ws1
bindsym $mod+2 workspace number $ws2
bindsym $mod+3 workspace number $ws3
bindsym $mod+4 workspace number $ws4
bindsym $mod+5 workspace number $ws5
bindsym $mod+6 workspace number $ws6
bindsym $mod+7 workspace number $ws7
bindsym $mod+8 workspace number $ws8
bindsym $mod+9 workspace number $ws9
bindsym $mod+0 workspace number $ws10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number $ws1
bindsym $mod+Shift+2 move container to workspace number $ws2
bindsym $mod+Shift+3 move container to workspace number $ws3
bindsym $mod+Shift+4 move container to workspace number $ws4
bindsym $mod+Shift+5 move container to workspace number $ws5
bindsym $mod+Shift+6 move container to workspace number $ws6
bindsym $mod+Shift+7 move container to workspace number $ws7
bindsym $mod+Shift+8 move container to workspace number $ws8
bindsym $mod+Shift+9 move container to workspace number $ws9
bindsym $mod+Shift+0 move container to workspace number $ws10

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'"

# Auto back and forth
# workspace_auto_back_and_forth yes

# Screenshot
bindsym $mod+Print exec --no-startup-id maim --select "/home/$USER/Pictures/$(date +%Y.%m.%d_%H%M.%S).png"
bindsym $mod+$alt+Print exec --no-startup-id maim --window $(xdotool getactivewindow) "/home/$USER/Pictures/$(date +%Y.%m.%d_%H%M.%S).png"
bindsym $mod+Shift+Print exec --no-startup-id maim --select | xclip -selection clipboard

# Lock screen
set $i3lockwall sh ~/.config/i3/scripts/lock.sh
bindsym $mod+x exec --no-startup-id $i3lockwall

# shutdown / restart / suspend...
set $mode_system System (l) lock, (e) logout, (s) suspend, (h) hibernate, (r) reboot, (CTRL+s) shutdown

mode "$mode_system" {
    bindsym l exec --no-startup-id $i3lockwall, mode "default"
    bindsym e exec --no-startup-id i3-msg exit, mode "default"
    bindsym s exec --no-startup-id $i3lockwall && systemctl suspend, mode "default"
    bindsym h exec --no-startup-id $i3lockwall && systemctl hibernate, mode "default"
    bindsym r exec --no-startup-id systemctl reboot, mode "default"
    bindsym Ctrl+s exec --no-startup-id systemctl poweroff -i, mode "default"

    # back to normal: Enter or Escape
    bindsym Return mode "default"
    bindsym Escape mode "default"
}

bindsym $mod+BackSpace mode "$mode_system"

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym h resize shrink width 10 px or 10 ppt
        bindsym j resize grow height 10 px or 10 ppt
        bindsym k resize shrink height 10 px or 10 ppt
        bindsym l resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}

bindsym $mod+r mode "resize"

# Wallpaper
exec --no-startup-id feh --no-fehbg --bg-fill --recursive --randomize ~/.wallpaper/*

# Floating Window pop up automatically
for_window [window_role="pop-up"] floating enable
for_window [window_role="task_dialog"] floating enable

# Set app to floating manually
for_window [class="Arandr"] floating enable

# Open in specific workspace
# Run `xprop | grep WM_CLASS`
# Output:
# WM_CLASS(STRING) = "brave-browser", "Brave-browser"
# WM_CLASS(STRING) = "<instance>", "<class>"
# assign [class="Brave-browser" instance="brave-browser"] → $ws2
# assign [class="Code" instance="code"] → $ws1

# Conky
# exec --no-startup-id conky -c ~/path/to/.conkyrc

# Startup apps
# exec --no-startup-id dropbox start

# Colors
# get color from XResource config, `~/.Xresources`
# variable_name XResource fallback

# special
# set_from_resource $foreground foreground #C6C6C6
# set_from_resource $background background #1C1C1C
# set_from_resource $cursorColor cursorColor #C6C6C6

# black
# set_from_resource $black1 color0 #303030
# set_from_resource $black2 color8 #444444
# set $trueblack #000000

# red
# set_from_resource $red1 color1 #d75f5f
# set_from_resource $red2 color9 #d75f5f

# green
# set_from_resource $green1 color2 #87AF87
# set_from_resource $green2 color10 #87AF87

# yellow
# set_from_resource $yellow1 color3 #ffd75f
# set_from_resource $yellow2 color11 #ffd75f

# blue
# set_from_resource $blue1 color4 #87afd7
# set_from_resource $blue2 color12 #87afd7

# magenta
# set_from_resource $cyan1 color5 #afafd7
# set_from_resource $cyan2 color13 #afafd7

# cyan
# set_from_resource $cyan1 color6 #afd7ff
# set_from_resource $cyan2 color14 #afd7ff

# white
# set_from_resource $white1 color7 #4E4E4E
# set_from_resource $white2 color15 #ffffff

# Multi-monitor Config
# TODO: Load from .screenlayouts, relaunch polybar, set wallpaper
set $mode_display Config monitor resolution - My first config (d) - My second config (t)

mode "$mode_display" {
    bindsym d exec --no-startup-id xrandr --output VGA-1 --off --output eDP-1 --primary --mode 1600x900 --pos 0x0 --rotate normal --output HDMI-2 --off --output HDMI-1 --off --output DP-2 --off --output DP-1 --off && ~/.fehbg, mode "default"
    bindsym t exec --no-startup-id xrandr --output eDP-1 --primary --mode 1600x900 --pos 0x809 --rotate normal --output VGA-1 --mode 1920x1080 --pos 2800x420 --rotate normal --output DP-1 --off --output HDMI-1 --mode 1920x1200 --pos 1600x0 --rotate left --output DP-2 --off --output HDMI-2 --off

    # back to normal: Enter or Escape
    bindsym Return mode "default"
    bindsym Escape mode "default"
}

bindsym $mod+period mode "$mode_display"

# Multi-monitor navigation 
bindsym $mod+$alt+l focus output right
bindsym $mod+$alt+h focus output left
bindsym $mod+$alt+Shift+l move workspace to output right
bindsym $mod+$alt+Shift+h move workspace to output left

# Review the lines below and append to ~/.config/i3/config

## volume and backlight control

# Use pactl to adjust volume in PulseAudio.
# set $refresh_i3status killall -SIGUSR1 i3status
bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +5% && $refresh_i3status
bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -5% && $refresh_i3status
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle && $refresh_i3status
bindsym XF86AudioMicMute exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle && $refresh_i3status

# Use to adjust brightness
bindsym XF86MonBrightnessUp exec xbacklight + 10
bindsym XF86MonBrightnessDown exec xbacklight - 10


# Polybar
exec_always --no-startup-id $HOME/.config/polybar/launch.sh

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
# bar {
#	status_command i3status
#	status_command i3status --config ~/.i3/i3status.conf
	# Disable all tray icons
#	tray_output none
#	colors {
#		background $black2
#		statusline $white2
#		separator $white2 
#		#                  border background text
#		focused_workspace  $background $background $red1
#		active_workspace   $black2 $black1 $white2
#		inactive_workspace $black1 $black2 $foreground
#		urgent_workspace   $red1 $red1 $white2
#		binding_mode       $background $red2 $white2
#	}
#}
